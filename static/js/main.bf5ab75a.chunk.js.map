{"version":3,"sources":["components/navbar.js","pages/Home.js","pages/Architecture.js","pages/Tradeshows.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","target","Home","useState","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","event","photo","index","photos","onClick","onClose","currentIndex","views","map","x","srcset","srcSet","caption","title","Architecture","Tradeshows","App","exact","path","component","createBrowserHistory","basename","process","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf5ab75a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <a className=\"navbar-brand\" href=\"./\">Orlando Carnate's 3D Portfolio</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            Renderings</a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                            <a className=\"dropdown-item\" href=\"./Tradeshows\">Tradeshows & Exhibits</a>\r\n                            <a className=\"dropdown-item\" href=\"./Architecture\">Architecture</a>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <a className=\"dropdown-item disabled\" href=\"./\">Animations</a>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\"> <a className=\"nav-link disabled text-white\">External Sites: </a></li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"https://carnate3d.wordpress.com\" target=\"_blank\"><i className=\"fab fa-wordpress\"></i> Blog</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"https://orlandocarnate.com\" target=\"_blank\"><i className=\"fas fa-globe\"></i> Developer Portfolio</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"https://www.linkedin.com/in/orlando-carnate/\" target=\"_blank\"><i className=\"fab fa-linkedin\"></i> LinkedIn</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"https://github.com/orlandocarnate\" target=\"_blank\"><i className=\"fab fa-github\"></i>GitHub</a>\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar;\r\n","// import React, { Component } from 'react';\r\nimport React, { useState, useCallback } from \"react\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport photos from \"../components/renderings\";\r\n\r\nfunction Home() {\r\n    const [currentImage, setCurrentImage] = useState(0);\r\n    const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n    const openLightbox = useCallback((event, { photo, index }) => {\r\n        setCurrentImage(index);\r\n        setViewerIsOpen(true);\r\n    }, []);\r\n\r\n    const closeLightbox = () => {\r\n        setCurrentImage(0);\r\n        setViewerIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            <Gallery photos={photos} onClick={openLightbox} />\r\n\r\n            <ModalGateway>\r\n                {viewerIsOpen ? (\r\n                    <Modal onClose={closeLightbox}>\r\n                        <Carousel\r\n                            currentIndex={currentImage}\r\n                            views={photos.map(x => ({\r\n                                ...x,\r\n                                srcset: x.srcSet,\r\n                                caption: x.title\r\n                            }))}\r\n                        />\r\n                    </Modal>\r\n                ) : null}\r\n            </ModalGateway>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Home;","// import React, { Component } from 'react';\r\nimport React, { useState, useCallback } from \"react\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport photos from \"../components/renderings-architecture\";\r\n\r\nfunction Architecture() {\r\n    const [currentImage, setCurrentImage] = useState(0);\r\n    const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n    const openLightbox = useCallback((event, { photo, index }) => {\r\n        setCurrentImage(index);\r\n        setViewerIsOpen(true);\r\n    }, []);\r\n\r\n    const closeLightbox = () => {\r\n        setCurrentImage(0);\r\n        setViewerIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            <Gallery photos={photos} onClick={openLightbox} />\r\n\r\n            <ModalGateway>\r\n                {viewerIsOpen ? (\r\n                    <Modal onClose={closeLightbox}>\r\n                        <Carousel\r\n                            currentIndex={currentImage}\r\n                            views={photos.map(x => ({\r\n                                ...x,\r\n                                srcset: x.srcSet,\r\n                                caption: x.title\r\n                            }))}\r\n                        />\r\n                    </Modal>\r\n                ) : null}\r\n            </ModalGateway>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Architecture;","// import React, { Component } from 'react';\r\nimport React, { useState, useCallback } from \"react\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport photos from \"../components/renderings-tradeshows\";\r\n\r\nfunction Tradeshows() {\r\n    const [currentImage, setCurrentImage] = useState(0);\r\n    const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n    const openLightbox = useCallback((event, { photo, index }) => {\r\n        setCurrentImage(index);\r\n        setViewerIsOpen(true);\r\n    }, []);\r\n\r\n    const closeLightbox = () => {\r\n        setCurrentImage(0);\r\n        setViewerIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            <Gallery photos={photos} onClick={openLightbox} />\r\n\r\n            <ModalGateway>\r\n                {viewerIsOpen ? (\r\n                    <Modal onClose={closeLightbox}>\r\n                        <Carousel\r\n                            currentIndex={currentImage}\r\n                            views={photos.map(x => ({\r\n                                ...x,\r\n                                srcset: x.srcSet,\r\n                                caption: x.title\r\n                            }))}\r\n                        />\r\n                    </Modal>\r\n                ) : null}\r\n            </ModalGateway>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Tradeshows;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\nimport NavBar from \"./components/navbar\";\nimport Home from \"./pages/Home\";\nimport Architecture from \"./pages/Architecture\";\nimport Tradeshows from \"./pages/Tradeshows\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n      <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/Architecture\" component={Architecture} />\n          <Route exact path=\"/Tradeshows\" component={Tradeshows} />\n        </Switch>\n\n      </div>\n    </Router>\n    // <div className=\"container\">\n    //   <section>\n    //     <Gallery photos={photos} onClick={openLightbox} />\n\n    //     <ModalGateway>\n    //       {viewerIsOpen ? (\n    //         <Modal onClose={closeLightbox}>\n    //           <Carousel\n    //             currentIndex={currentImage}\n    //             views={photos.map(x => ({\n    //               ...x,\n    //               srcset: x.srcSet,\n    //               caption: x.title\n    //             }))}\n    //           />\n    //         </Modal>\n    //       ) : null}\n    //     </ModalGateway>\n\n    //   </section>\n    // </div>\n\n  );\n}\n\nexport default App;\n\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}