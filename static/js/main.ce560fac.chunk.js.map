{"version":3,"sources":["components/navbar.js","pages/Home.js","pages/Architecture.js","pages/Tradeshows.js","pages/Threejs.js","pages/VirtualTours.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","Navbar","collapseOnSelect","expand","className","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Home","Container","Row","categories","map","item","Col","lg","class","page","title","src","image","description","Architecture","useState","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","event","photo","index","photos","onClick","onClose","currentIndex","views","x","srcset","srcSet","caption","Tradeshows","Threejs","gallery","Card","Body","Title","Img","Text","Button","url","variant","App","basename","exact","path","component","VRTours","createBrowserHistory","process","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce560fac.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Nav, Navbar, Container } from \"react-bootstrap\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" className=\"navbar-expand-lg navbar-dark bg-primary\">\r\n      <Navbar.Brand href=\"./\">Orlando Carnate</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"me-auto\">\r\n        <Nav.Link href=\"./#/\">Home</Nav.Link>\r\n          <Nav.Link href=\"./#/Threejs\">Three.js Projects</Nav.Link>\r\n          <Nav.Link href=\"./#/VRTours\">VR Tours</Nav.Link>\r\n          <Nav.Link href=\"./#/Architecture\">Architecture</Nav.Link>\r\n          <Nav.Link href=\"./#/Tradeshows\">Tradeshows & Exhibits</Nav.Link>\r\n          <Nav.Link href=\"https://www.youtube.com/playlist?list=PLv0bey_3GrtIx5w71fSIR25fJ38iyN_11\">\r\n            <i className=\"fab fa-youtube\"></i> Animations\r\n          </Nav.Link>\r\n          <Nav.Link href=\"https://www.linkedin.com/in/orlando-carnate/\">\r\n            <i className=\"fab fa-linkedin\"></i> LinkedIn\r\n          </Nav.Link>\r\n          <Nav.Link href=\"https://github.com/orlandocarnate\">\r\n            <i className=\"fab fa-github\"></i>GitHub\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","// import React, { Component } from 'react';\r\nimport React from \"react\";\r\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport Categories from \"../components/renderings-home\";\r\nimport { Component } from \"react\";\r\nimport \"./category-styles.css\";\r\nimport categories from '../categories.json';\r\n\r\nfunction Home() {\r\n  return (\r\n    <Container>\r\n      <Row className=\"pb-2 mt-3\">\r\n\r\n      {categories.map((item) => (\r\n          <Col lg={6} className=\"d-flex align-items-stretch\">\r\n          <div class=\"portfolio-card\">\r\n            <a\r\n              href={item.page}\r\n              class=\"btn btn-primary\"\r\n            >\r\n              <h5>{item.title}</h5>\r\n              <img\r\n                class=\"img-responsive portfolio-img\"\r\n                src={item.image}\r\n              />\r\n              <div class=\"mb-2 text-center\">\r\n                <p>{item.description}</p>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </Col>\r\n      ))}\r\n      \r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","// import React, { Component } from 'react';\r\nimport React, { useState, useCallback } from \"react\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport photos from \"../components/renderings-architecture\";\r\n\r\nfunction Architecture() {\r\n    const [currentImage, setCurrentImage] = useState(0);\r\n    const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n    const openLightbox = useCallback((event, { photo, index }) => {\r\n        setCurrentImage(index);\r\n        setViewerIsOpen(true);\r\n    }, []);\r\n\r\n    const closeLightbox = () => {\r\n        setCurrentImage(0);\r\n        setViewerIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            <Gallery photos={photos} onClick={openLightbox} />\r\n\r\n            <ModalGateway>\r\n                {viewerIsOpen ? (\r\n                    <Modal onClose={closeLightbox}>\r\n                        <Carousel\r\n                            currentIndex={currentImage}\r\n                            views={photos.map(x => ({\r\n                                ...x,\r\n                                srcset: x.srcSet,\r\n                                caption: x.title\r\n                            }))}\r\n                        />\r\n                    </Modal>\r\n                ) : null}\r\n            </ModalGateway>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Architecture;","// import React, { Component } from 'react';\r\nimport React, { useState, useCallback } from \"react\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport photos from \"../components/renderings-tradeshows\";\r\n\r\nfunction Tradeshows() {\r\n    const [currentImage, setCurrentImage] = useState(0);\r\n    const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n    const openLightbox = useCallback((event, { photo, index }) => {\r\n        setCurrentImage(index);\r\n        setViewerIsOpen(true);\r\n    }, []);\r\n\r\n    const closeLightbox = () => {\r\n        setCurrentImage(0);\r\n        setViewerIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            <Gallery photos={photos} onClick={openLightbox} />\r\n\r\n            <ModalGateway>\r\n                {viewerIsOpen ? (\r\n                    <Modal onClose={closeLightbox}>\r\n                        <Carousel\r\n                            currentIndex={currentImage}\r\n                            views={photos.map(x => ({\r\n                                ...x,\r\n                                srcset: x.srcSet,\r\n                                caption: x.title\r\n                            }))}\r\n                        />\r\n                    </Modal>\r\n                ) : null}\r\n            </ModalGateway>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Tradeshows;","// import React, { Component } from 'react';\r\nimport React, { useState, useCallback } from \"react\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport gallery from \"../components/threejs-list.json\";\r\n\r\nfunction Threejs() {\r\n  return (\r\n    <Row>\r\n      {gallery.map((item) => (\r\n        <Col lg={6} className=\"d-flex align-items-stretch pt-5\">\r\n          <Card className=\"h-100\">\r\n              <Card.Body className=\"d-flex flex-column\">\r\n              <Card.Title>{item.title}</Card.Title>\r\n              <Card.Img\r\n                src={item.image}\r\n              />\r\n              <Card.Text className=\"my-2 text-center text-white\">\r\n                  {item.description}\r\n              </Card.Text>\r\n\r\n              <Button href={item.url} variant=\"secondary\" className=\"mt-auto\">Visit page</Button>\r\n\r\n              </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Threejs;\r\n","// import React, { Component } from 'react';\r\nimport React, { useState, useCallback } from \"react\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport gallery from \"../components/virtual-tours.json\";\r\n\r\nfunction Threejs() {\r\n  return (\r\n    <Row>\r\n      {gallery.map((item) => (\r\n        <Col lg={6} className=\"d-flex align-items-stretch pt-5\">\r\n          <Card className=\"h-100\">\r\n              <Card.Body className=\"d-flex flex-column\">\r\n              <Card.Title>{item.title}</Card.Title>\r\n              <Card.Img\r\n                src={item.image}\r\n              />\r\n              <Card.Text className=\"my-2 text-center text-white\">\r\n                  {item.description}\r\n              </Card.Text>\r\n\r\n              <Button href={item.url} variant=\"secondary\" className=\"mt-auto\">Visit site</Button>\r\n\r\n              </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Threejs;\r\n","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport { createBrowserHistory } from 'history';\r\nimport NavBar from \"./components/navbar\";\r\nimport Home from \"./pages/Home\";\r\nimport Architecture from \"./pages/Architecture\";\r\nimport Tradeshows from \"./pages/Tradeshows\";\r\nimport Threejs from './pages/Threejs';\r\nimport VRTours from './pages/VirtualTours';\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter basename='/'>\r\n      <NavBar />\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/Threejs\" component={Threejs} />\r\n          <Route path=\"/VRTours\" component={VRTours} />\r\n          <Route path=\"/Architecture\" component={Architecture} />\r\n          <Route path=\"/Tradeshows\" component={Tradeshows} />\r\n        </Switch>\r\n\r\n      </div>\r\n    </HashRouter>\r\n    // <div className=\"container\">\r\n    //   <section>\r\n    //     <Gallery photos={photos} onClick={openLightbox} />\r\n\r\n    //     <ModalGateway>\r\n    //       {viewerIsOpen ? (\r\n    //         <Modal onClose={closeLightbox}>\r\n    //           <Carousel\r\n    //             currentIndex={currentImage}\r\n    //             views={photos.map(x => ({\r\n    //               ...x,\r\n    //               srcset: x.srcSet,\r\n    //               caption: x.title\r\n    //             }))}\r\n    //           />\r\n    //         </Modal>\r\n    //       ) : null}\r\n    //     </ModalGateway>\r\n\r\n    //   </section>\r\n    // </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nexport const history = createBrowserHistory({\r\n  basename: process.env.PUBLIC_URL\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}